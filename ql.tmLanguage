<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>QL</string>
    <key>scopeName</key>
    <string>source.ql</string>
    <key>fileTypes</key>
    <array>
      <string>ql</string>
      <string>qll</string>
    </array>
    <key>uuid</key>
    <string>7F6926BF-1C6C-468A-A7AA-215EBAC86A4E</string>
    <key>regexOptions</key>
    <string>x</string>
    <key>macros</key>
    <dict>
      <key>keyword</key>
      <string>\b(?#)(?#end-of-id)</string>
    </dict>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#module-member</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>id-character</key>
      <dict>
        <key>match</key>
        <string>[0-9A-Za-z_]</string>
      </dict>
      <key>end-of-id</key>
      <dict>
        <key>match</key>
        <string>(?!(?#id-character))</string>
      </dict>
      <key>simple-id</key>
      <dict>
        <key>match</key>
        <string>\b [A-Za-z][0-9A-Za-z_]* (?#end-of-id)</string>
      </dict>
      <key>lower-id</key>
      <dict>
        <key>match</key>
        <string>\b [a-z][0-9A-Za-z_]* (?#end-of-id)</string>
      </dict>
      <key>upper-id</key>
      <dict>
        <key>match</key>
        <string>\b [A-Z][0-9A-Za-z_]* (?#end-of-id)</string>
      </dict>
      <key>at-lower-id</key>
      <dict>
        <key>match</key>
        <string>@[a-z][0-9A-Za-z_]* (?#end-of-id)</string>
      </dict>
      <key>comment-start</key>
      <dict>
        <key>match</key>
        <string>// | /\*</string>
      </dict>
      <key>non-context-sensitive</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operator-or-punctuation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keyword</string>
          </dict>
        </array>
      </dict>
      <key>relational-operator</key>
      <dict>
        <key>match</key>
        <string>&lt;=|&lt;|&gt;=|&gt;</string>
        <key>name</key>
        <string>keyword.operator.relational.ql</string>
      </dict>
      <key>comparison-operator</key>
      <dict>
        <key>match</key>
        <string>=|\!-</string>
        <key>name</key>
        <string>keyword.operator.comparison.ql</string>
      </dict>
      <key>arithmetic-operator</key>
      <dict>
        <key>match</key>
        <string>\+|-|\*|/|%</string>
        <key>name</key>
        <string>keyword.operator.arithmetic.ql</string>
      </dict>
      <key>comma</key>
      <dict>
        <key>match</key>
        <string>,</string>
        <key>name</key>
        <string>punctuation.separator.comma.ql</string>
      </dict>
      <key>semicolon</key>
      <dict>
        <key>match</key>
        <string>;</string>
        <key>name</key>
        <string>punctuation.separator.statement.ql</string>
      </dict>
      <key>dot</key>
      <dict>
        <key>match</key>
        <string>\.</string>
        <key>name</key>
        <string>punctuation.accessor.ql</string>
      </dict>
      <key>dotdot</key>
      <dict>
        <key>match</key>
        <string>\.\.</string>
        <key>name</key>
        <string>punctuation.operator.range.ql</string>
      </dict>
      <key>pipe</key>
      <dict>
        <key>match</key>
        <string>\|</string>
        <key>name</key>
        <string>punctuation.separator.pipe.ql</string>
      </dict>
      <key>open-paren</key>
      <dict>
        <key>match</key>
        <string>\(</string>
        <key>name</key>
        <string>punctuation.parenthesis.open.ql</string>
      </dict>
      <key>close-paren</key>
      <dict>
        <key>match</key>
        <string>\)</string>
        <key>name</key>
        <string>punctuation.parenthesis.close.ql</string>
      </dict>
      <key>open-brace</key>
      <dict>
        <key>match</key>
        <string>\{</string>
        <key>name</key>
        <string>punctuation.curlybrace.open.ql</string>
      </dict>
      <key>close-brace</key>
      <dict>
        <key>match</key>
        <string>\}</string>
        <key>name</key>
        <string>punctuation.curlybrace.close.ql</string>
      </dict>
      <key>open-bracket</key>
      <dict>
        <key>match</key>
        <string>\[</string>
        <key>name</key>
        <string>punctuation.squarebracket.open.ql</string>
      </dict>
      <key>close-bracket</key>
      <dict>
        <key>match</key>
        <string>\]</string>
        <key>name</key>
        <string>punctuation.squarebracket.close.ql</string>
      </dict>
      <key>operator-or-punctuation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#relational-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comparison-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#arithmetic-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#semicolon</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#dot</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#dotdot</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pipe</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#open-paren</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#close-paren</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#open-brace</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#close-brace</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#open-bracket</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#close-bracket</string>
          </dict>
        </array>
      </dict>
      <key>dont-care</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>_</string>
        </dict>
        <key>name</key>
        <string>variable.language.dont-care.ql</string>
      </dict>
      <key>and</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>and</string>
        </dict>
        <key>name</key>
        <string>keyword.other.and.ql</string>
      </dict>
      <key>any</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>any</string>
        </dict>
        <key>name</key>
        <string>keyword.quantifier.any.ql</string>
      </dict>
      <key>as</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>as</string>
        </dict>
        <key>name</key>
        <string>keyword.other.as.ql</string>
      </dict>
      <key>asc</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>asc</string>
        </dict>
        <key>name</key>
        <string>keyword.order.asc.ql</string>
      </dict>
      <key>avg</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>avg</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.avg.ql</string>
      </dict>
      <key>boolean</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>boolean</string>
        </dict>
        <key>name</key>
        <string>keyword.type.boolean.ql</string>
      </dict>
      <key>by</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>by</string>
        </dict>
        <key>name</key>
        <string>keyword.order.by.ql</string>
      </dict>
      <key>class</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>class</string>
        </dict>
        <key>name</key>
        <string>keyword.other.class.ql</string>
      </dict>
      <key>concat</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>concat</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.concat.ql</string>
      </dict>
      <key>count</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>count</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.count.ql</string>
      </dict>
      <key>date</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>date</string>
        </dict>
        <key>name</key>
        <string>keyword.type.date.ql</string>
      </dict>
      <key>desc</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>desc</string>
        </dict>
        <key>name</key>
        <string>keyword.order.desc.ql</string>
      </dict>
      <key>else</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>else</string>
        </dict>
        <key>name</key>
        <string>keyword.other.else.ql</string>
      </dict>
      <key>exists</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>exists</string>
        </dict>
        <key>name</key>
        <string>keyword.quantifier.exists.ql</string>
      </dict>
      <key>extends</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>extends</string>
        </dict>
        <key>name</key>
        <string>keyword.other.extends.ql</string>
      </dict>
      <key>false</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>false</string>
        </dict>
        <key>name</key>
        <string>constant.language.boolean.false.ql</string>
      </dict>
      <key>float</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>float</string>
        </dict>
        <key>name</key>
        <string>keyword.type.float.ql</string>
      </dict>
      <key>forall</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>forall</string>
        </dict>
        <key>name</key>
        <string>keyword.quantifier.forall.ql</string>
      </dict>
      <key>forex</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>forex</string>
        </dict>
        <key>name</key>
        <string>keyword.quantifier.forex.ql</string>
      </dict>
      <key>from</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>from</string>
        </dict>
        <key>name</key>
        <string>keyword.other.from.ql</string>
      </dict>
      <key>if</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>if</string>
        </dict>
        <key>name</key>
        <string>keyword.other.if.ql</string>
      </dict>
      <key>implies</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>implies</string>
        </dict>
        <key>name</key>
        <string>keyword.other.implies.ql</string>
      </dict>
      <key>import</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>import</string>
        </dict>
        <key>name</key>
        <string>keyword.other.import.ql</string>
      </dict>
      <key>in</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>in</string>
        </dict>
        <key>name</key>
        <string>keyword.other.in.ql</string>
      </dict>
      <key>instanceof</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>instanceof</string>
        </dict>
        <key>name</key>
        <string>keyword.other.instanceof.ql</string>
      </dict>
      <key>int</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>int</string>
        </dict>
        <key>name</key>
        <string>keyword.type.int.ql</string>
      </dict>
      <key>max</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>max</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.max.ql</string>
      </dict>
      <key>min</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>min</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.min.ql</string>
      </dict>
      <key>module</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>module</string>
        </dict>
        <key>name</key>
        <string>keyword.other.module.ql</string>
      </dict>
      <key>newtype</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>newtype</string>
        </dict>
        <key>name</key>
        <string>keyword.other.newtype.ql</string>
      </dict>
      <key>none</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>none</string>
        </dict>
        <key>name</key>
        <string>keyword.quantifier.none.ql</string>
      </dict>
      <key>not</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>not</string>
        </dict>
        <key>name</key>
        <string>keyword.other.not.ql</string>
      </dict>
      <key>or</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>or</string>
        </dict>
        <key>name</key>
        <string>keyword.other.or.ql</string>
      </dict>
      <key>order</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>order</string>
        </dict>
        <key>name</key>
        <string>keyword.order.order.ql</string>
      </dict>
      <key>predicate</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>predicate</string>
        </dict>
        <key>name</key>
        <string>keyword.other.predicate.ql</string>
      </dict>
      <key>rank</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>rank</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.rank.ql</string>
      </dict>
      <key>result</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>result</string>
        </dict>
        <key>name</key>
        <string>variable.language.result.ql</string>
      </dict>
      <key>select</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>select</string>
        </dict>
        <key>name</key>
        <string>keyword.query.select.ql</string>
      </dict>
      <key>strictconcat</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>strictconcat</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.strictconcat.ql</string>
      </dict>
      <key>strictcount</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>strictcount</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.strictcount.ql</string>
      </dict>
      <key>strictsum</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>strictsum</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.strictsum.ql</string>
      </dict>
      <key>string</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>string</string>
        </dict>
        <key>name</key>
        <string>keyword.type.string.ql</string>
      </dict>
      <key>sum</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>sum</string>
        </dict>
        <key>name</key>
        <string>keyword.aggregate.sum.ql</string>
      </dict>
      <key>super</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>super</string>
        </dict>
        <key>name</key>
        <string>variable.language.super.ql</string>
      </dict>
      <key>then</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>then</string>
        </dict>
        <key>name</key>
        <string>keyword.other.then.ql</string>
      </dict>
      <key>this</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>this</string>
        </dict>
        <key>name</key>
        <string>variable.language.this.ql</string>
      </dict>
      <key>true</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>true</string>
        </dict>
        <key>name</key>
        <string>constant.language.boolean.true.ql</string>
      </dict>
      <key>where</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>where</string>
        </dict>
        <key>name</key>
        <string>keyword.query.where.ql</string>
      </dict>
      <key>keyword</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#dont-care</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#and</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#any</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#asc</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#avg</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#by</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#concat</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#count</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#date</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#desc</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#else</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#exists</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#extends</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#false</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#float</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#forall</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#forex</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#from</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#implies</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#in</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#instanceof</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#int</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#max</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#min</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#newtype</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#none</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#not</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#or</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#order</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predicate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#rank</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#result</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#select</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strictconcat</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strictcount</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strictsum</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sum</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#super</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#then</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#this</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#true</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#where</string>
          </dict>
        </array>
      </dict>
      <key>predicate-start-keyword</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#boolean</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#date</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#float</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#int</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predicate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
        </array>
      </dict>
      <key>abstract</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>abstract</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.abstract.ql</string>
      </dict>
      <key>bindingset</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>bindingset</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.bindingset.ql</string>
      </dict>
      <key>cached</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>cached</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.cached.ql</string>
      </dict>
      <key>deprecated</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>deprecated</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.deprecated.ql</string>
      </dict>
      <key>external</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>external</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.external.ql</string>
      </dict>
      <key>final</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>final</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.final.ql</string>
      </dict>
      <key>language</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>language</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.language.ql</string>
      </dict>
      <key>library</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>library</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.library.ql</string>
      </dict>
      <key>override</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>override</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.override.ql</string>
      </dict>
      <key>pragma</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>pragma</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.pragma.ql</string>
      </dict>
      <key>private</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>private</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.private.ql</string>
      </dict>
      <key>query</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>query</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.query.ql</string>
      </dict>
      <key>transient</key>
      <dict>
        <key>match</key>
        <dict>
          <key>keyword</key>
          <string>transient</string>
        </dict>
        <key>name</key>
        <string>storage.modifier.transient.ql</string>
      </dict>
      <key>annotation-keyword</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#abstract</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#bindingset</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#cached</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#deprecated</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#external</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#final</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#language</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#library</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#override</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pragma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#private</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#query</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#transient</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>/\*\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.documentation.ql</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?&lt;=/\*\*)([^*]|\*(?!/))*$</string>
                <key>while</key>
                <string>(^|\G)\s*([^*]|\*(?!/))(?=([^*]|[*](?!/))*$)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>text.html.markdown#fenced_code_block</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>text.html.markdown#lists</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>text.html.markdown#inline</string>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>\G\s* (@\S+)</string>
                    <key>name</key>
                    <string>keyword.tag.ql</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>//.*$</string>
            <key>name</key>
            <string>comment.line.double-slash.ql</string>
          </dict>
        </array>
      </dict>
      <key>module-member</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#import-directive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-as-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#select-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predicate-or-field-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation</string>
          </dict>
        </array>
      </dict>
      <key>import-directive</key>
      <dict>
        <key>beginPattern</key>
        <string>#import</string>
        <key>end</key>
        <string>(?#simple-id) (?!\s*(\.|\:\:))</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.namespace.ql</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.block.import-directive.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>entity.name.type.namespace.ql</string>
          </dict>
        </array>
      </dict>
      <key>end-of-as-clause</key>
      <dict>
        <key>match</key>
        <string>(?: (?&lt;=(?#id-character)) (?!(?#id-character)) (?&lt;!(?&lt;!(?#id-character))as)) |
(?=\s* (?!(?#comment-start) | (?#simple-id)) \S) |
(?=\s* (?#keyword))</string>
      </dict>
      <key>import-as-clause</key>
      <dict>
        <key>beginPattern</key>
        <string>#as</string>
        <key>end</key>
        <string>(?#end-of-as-clause)</string>
        <key>name</key>
        <string>meta.block.import-as-clause.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>entity.name.type.namespace.ql</string>
          </dict>
        </array>
      </dict>
      <key>module-declaration</key>
      <dict>
        <key>beginPattern</key>
        <string>#module</string>
        <key>end</key>
        <string>(?&lt;=\}|;)</string>
        <key>name</key>
        <string>meta.block.module-declaration.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#module-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>entity.name.type.namespace.ql</string>
          </dict>
        </array>
      </dict>
      <key>module-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-brace</string>
        <key>endPattern</key>
        <string>#close-brace</string>
        <key>name</key>
        <string>meta.block.module-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#module-member</string>
          </dict>
        </array>
      </dict>
      <key>module-qualifier</key>
      <dict>
        <key>match</key>
        <string>(?#simple-id) (?=\s*\:\:)</string>
        <key>name</key>
        <string>entity.name.type.namespace.ql</string>
      </dict>
      <key>predicate-or-field-declaration</key>
      <dict>
        <key>begin</key>
        <string>(?:(?=(?#simple-id))(?!(?#keyword)|(?#annotation-keyword))) |
(?=(?#predicate-start-keyword)) |
(?=(?#at-lower-id))</string>
        <key>end</key>
        <string>(?&lt;=\}|;)</string>
        <key>name</key>
        <string>meta.block.predicate-or-field-declaration.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-parameter-list</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predicate-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-qualifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)(?=\s*;)</string>
            <key>name</key>
            <string>variable.field.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)</string>
            <key>name</key>
            <string>entity.name.function.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)|(?#at-lower-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
        </array>
      </dict>
      <key>predicate-parameter-list</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-paren</string>
        <key>endPattern</key>
        <string>#close-paren</string>
        <key>name</key>
        <string>meta.block.predicate-parameter-list.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)(?=\s*(?:,|\)))</string>
            <key>name</key>
            <string>variable.parameter.ql</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-qualifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)|(?#at-lower-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)</string>
            <key>name</key>
            <string>variable.parameter.ql</string>
          </dict>
        </array>
      </dict>
      <key>expr-as-clause</key>
      <dict>
        <key>beginPattern</key>
        <string>#as</string>
        <key>end</key>
        <string>(?#end-of-as-clause)</string>
        <key>name</key>
        <string>meta.block.expr-as-clause.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>variable.other.ql</string>
          </dict>
        </array>
      </dict>
      <key>predicate-body-contents</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr-as-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-qualifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)\s*(?:\*|\+)?\s*(?=\()</string>
            <key>name</key>
            <string>entity.name.function.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)</string>
            <key>name</key>
            <string>variable.other.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)|(?#at-lower-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
        </array>
      </dict>
      <key>predicate-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-brace</string>
        <key>endPattern</key>
        <string>#close-brace</string>
        <key>name</key>
        <string>meta.block.predicate-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-body-contents</string>
          </dict>
        </array>
      </dict>
      <key>annotation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#bindingset-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#language-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pragma-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation-keyword</string>
          </dict>
        </array>
      </dict>
      <key>bindingset-annotation</key>
      <dict>
        <key>beginPattern</key>
        <string>#bindingset</string>
        <key>end</key>
        <string>(?! \s | (?#comment-start) | \[ ) |
(?&lt;=\])</string>
        <key>name</key>
        <string>meta.block.bindingset-annotation.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#bindingset-annotation-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
        </array>
      </dict>
      <key>bindingset-annotation-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-bracket</string>
        <key>endPattern</key>
        <string>#close-bracket</string>
        <key>name</key>
        <string>meta.block.bindingset-annotation-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>variable.parameter.ql</string>
          </dict>
        </array>
      </dict>
      <key>language-annotation</key>
      <dict>
        <key>beginPattern</key>
        <string>#language</string>
        <key>end</key>
        <string>(?! \s | (?#comment-start) | \[ ) |
(?&lt;=\])</string>
        <key>name</key>
        <string>meta.block.language-annotation.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#language-annotation-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
        </array>
      </dict>
      <key>language-annotation-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-bracket</string>
        <key>endPattern</key>
        <string>#close-bracket</string>
        <key>name</key>
        <string>meta.block.language-annotation-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <dict>
              <key>keyword</key>
              <string>monotonicAggregates</string>
            </dict>
            <key>name</key>
            <string>storage.modifier.ql</string>
          </dict>
        </array>
      </dict>
      <key>pragma-annotation</key>
      <dict>
        <key>beginPattern</key>
        <string>#pragma</string>
        <key>end</key>
        <string>(?! \s | (?#comment-start) | \[ ) |
(?&lt;=\])</string>
        <key>name</key>
        <string>meta.block.pragma-annotation.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#pragma-annotation-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
        </array>
      </dict>
      <key>pragma-annotation-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-bracket</string>
        <key>endPattern</key>
        <string>#close-bracket</string>
        <key>name</key>
        <string>meta.block.pragma-annotation-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(?:inline|noinline|nomagic|noopt)\b</string>
            <key>name</key>
            <string>storage.modifier.ql</string>
          </dict>
        </array>
      </dict>
      <key>newtype-declaration</key>
      <dict>
        <key>beginPattern</key>
        <string>#newtype</string>
        <key>end</key>
        <string>(?! \s | (?#upper-id) | (?#comment-start) | \= | \( )</string>
        <key>name</key>
        <string>meta.block.newtype.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#newtype-branch</string>
          </dict>
        </array>
      </dict>
      <key>newtype-branch</key>
      <dict>
        <key>begin</key>
        <string>(?#upper-id)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\}) | (?! \s | (?#comment-start) | \{ )</string>
        <key>name</key>
        <string>meta.block.newtype-branch.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
        </array>
      </dict>
      <key>class-declaration</key>
      <dict>
        <key>beginPattern</key>
        <string>#class</string>
        <key>end</key>
        <string>(?&lt;= \} | ; )</string>
        <key>name</key>
        <string>meta.block.class-declaration.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#class-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#extends-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)</string>
            <key>name</key>
            <string>entity.name.type.class.ql</string>
          </dict>
        </array>
      </dict>
      <key>extends-clause</key>
      <dict>
        <key>beginPattern</key>
        <string>#extends</string>
        <key>end</key>
        <string>(?= \{ )</string>
        <key>name</key>
        <string>meta.block.extends-clause.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)|(?#at-lower-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
        </array>
      </dict>
      <key>class-body</key>
      <dict>
        <key>beginPattern</key>
        <string>#open-brace</string>
        <key>endPattern</key>
        <string>#close-brace</string>
        <key>name</key>
        <string>meta.block.class-body.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#class-member</string>
          </dict>
        </array>
      </dict>
      <key>class-member</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-or-field-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
        </array>
      </dict>
      <key>select-clause</key>
      <dict>
        <key>begin</key>
        <string>(?=(?#from)|(?#where)|(?#select))</string>
        <key>end</key>
        <string>(?!(?#from)|(?#where)|(?#select))</string>
        <key>name</key>
        <string>meta.block.select-clause.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#from-section</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#where-section</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#select-section</string>
          </dict>
        </array>
      </dict>
      <key>from-section</key>
      <dict>
        <key>beginPattern</key>
        <string>#from</string>
        <key>end</key>
        <string>(?= (?#select) | (?#where) )</string>
        <key>name</key>
        <string>meta.block.from-section.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)(?=\s*(?:,|(?#where)|(?#select)|$))</string>
            <key>name</key>
            <string>variable.parameter.ql</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-qualifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#upper-id)|(?#at-lower-id)</string>
            <key>name</key>
            <string>entity.name.type.ql</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#lower-id)</string>
            <key>name</key>
            <string>variable.parameter.ql</string>
          </dict>
        </array>
      </dict>
      <key>where-section</key>
      <dict>
        <key>beginPattern</key>
        <string>#where</string>
        <key>end</key>
        <string>(?=(?#select))</string>
        <key>name</key>
        <string>meta.block.where-section.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-body-contents</string>
          </dict>
        </array>
      </dict>
      <key>select-section</key>
      <dict>
        <key>beginPattern</key>
        <string>#select</string>
        <key>end</key>
        <string>(?=\n)</string>
        <key>name</key>
        <string>meta.block.select-section.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#predicate-body-contents</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#select-as-clause</string>
          </dict>
        </array>
      </dict>
      <key>select-as-clause</key>
      <dict>
        <key>beginPattern</key>
        <string>#as</string>
        <key>end</key>
        <string>(?&lt;=(?#id-character)(?#end-of-id))</string>
        <key>match</key>
        <string>meta.block.select-as-clause.ql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#non-context-sensitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?#simple-id)</string>
            <key>name</key>
            <string>variable.other.ql</string>
          </dict>
        </array>
      </dict>
      <key>literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#float-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#int-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-literal</string>
          </dict>
        </array>
      </dict>
      <key>int-literal</key>
      <dict>
        <key>match</key>
        <string>-?[0-9]+(?![0-9])</string>
        <key>name</key>
        <string>constant.numeric.decimal.ql</string>
      </dict>
      <key>float-literal</key>
      <dict>
        <key>match</key>
        <string>-?[0-9]+\.[0-9]+(?![0-9])</string>
        <key>name</key>
        <string>constant.numeric.decimal.ql</string>
      </dict>
      <key>string-literal</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.ql</string>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ql</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(") | ((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.ql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-escape</string>
          </dict>
        </array>
      </dict>
      <key>string-escape</key>
      <dict>
        <key>match</key>
        <string>\\["\\nrt]</string>
        <key>name</key>
        <string>constant.character.escape.ql</string>
      </dict>
    </dict>
  </dict>
</plist>